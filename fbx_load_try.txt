// import './App.css';
// import React, { useRef, useEffect, useState } from 'react';
// import { Canvas, useFrame } from '@react-three/fiber';
// import { PerspectiveCamera, CameraControls } from '@react-three/drei';
// import { FBXLoader } from 'three/addons/loaders/FBXLoader'; // FBXLoader 추가

// function FBXModel() {
//   const [fbxModel, setFbxModel] = useState(null); // FBX 모델을 상태로 관리

//   useEffect(() => {
//     const loader = new FBXLoader();
//     loader.load('/noring.fbx', (fbx) => {
//       console.log('FBX 모델이 로드되었습니다:', fbx); // 로드 상태 로깅
//       setFbxModel(fbx); // 로드된 FBX 모델을 상태로 설정
//     });
//   }, []);

//   useFrame(() => {
//     if (fbxModel) {
//       fbxModel.scale.set(0.1, 0.1, 0.1);
//       // fbxModel.rotation.y += 0.005;
//     }
//   });

//   return fbxModel ? <primitive object={fbxModel} /> : null; // 로드된 FBX 모델이 있으면 표시, 없으면 null 반환
// }

// function App() {
//   return (
//     <Canvas style={{ width: '100%', height: '100vh' }} camera={{ position: [0, 5, 20] }}>
//       <CameraControls minPolarAngle={0} maxPolarAngle={Math.PI / 0.5} />
//       <ambientLight intensity={0.9} />
//       <directionalLight color="#ffffff" position={[5, 5, 5]} />

//       <gridHelper args={[100, 100, 'red', 'red']} position={[0, 0, 0]} rotation={[0, 0, 0]} />
//       <gridHelper args={[100, 100, 'green', 'green']} position={[-50, 50, 0]} rotation={[0, 0, Math.PI / 2]} />
//       <gridHelper args={[100, 100, 'blue', 'blue']} position={[0, 50, 50]} rotation={[Math.PI / 2, 0, 0]} />

//       <PerspectiveCamera fov={40} near={1} far={1000} position={[10, 0, 50]} />

//       {/* FBXModel 컴포넌트를 사용하여 FBX 모델 추가 */}
//       <FBXModel />
//     </Canvas>
//   );
// }

// export default App;
